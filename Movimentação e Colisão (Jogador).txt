// Player Input
kbRight = keyboard_check(vk_right);
kbLeft = keyboard_check(vk_left);
kbSpace = keyboard_check(vk_up);
kbSpaceReleased = keyboard_check_released(vk_up);

// Gravity
if (!place_meeting(x, y + 1, oWall)) {
    vSpeed += objGravity;

    // Controlling the Jump Height
    if (kbSpaceReleased && vSpeed < -6) {
        vSpeed = -6
    }
} else {
    vSpeed = 0;

    // Jumping Code
    if (kbSpace) {
        vSpeed = -16.5;
    }
}

// Setting Player's Speed
if (kbRight) {
    hSpeed = dSpeed;
}

if (kbLeft) {
    hSpeed = -dSpeed;
}

if (!kbRight && !kbLeft) {
    hSpeed = 0;
}

//Colliding with Walls
// Horizontal Collision

if (place_meeting(x+hSpeed,y, oWall))
{
	 while(!place_meeting(x+sign(hSpeed),y,oWall))
	 {
		x=x+sign(hSpeed);
	 }
	 hSpeed=0;
	
}
x=x+hSpeed;

// Vertical Collision

if(place_meeting(x,y+vSpeed, oWall))
{
	while(!place_meeting(x,y+sign(vSpeed),oWall))
	{
		y=y+sign(vSpeed);
	}
	vSpeed=0;
}
y=y+vSpeed;

// Rotating the Sprite
if (hSpeed > 0) {
	image_xscale = 1;
} else if (hSpeed < 0) {
	image_xscale = -1;
}

